/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

DebugSwitches
{
    // mushyZoneSource 1;
    // limitSolute     1;
}

application     directChillFoam;

// startFrom       startTime;
startFrom       latestTime;

startTime       0;

stopAt          endTime;
// stopAt          writeNow;

endTime         5000.0;

deltaT          0.01;

// writeControl    timeStep;
writeControl    adjustableRunTime;

writeInterval   10;

purgeWrite      5;

writeFormat     binary;

writePrecision  12;

writeCompression uncompressed;

timeFormat      general;

timePrecision   12;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           1.0;
// maxDeltaT       1;
maxAlphaCo      0.5;

numericalFunctions
{
    #includeFunc residuals(funcName=residuals, p_rgh, U, h)
}

fieldsFunctions
{
    #includeFunc grad(funcName=gradT, T)
}

graphFunctions
{
    #includeFunc graphCell
    (
        funcName=centreline,
        start=(1e-3 0  0.001),
        end=(1e-3 0 -0.899),
        fields=(T),
        axis=z
    )

    #includeFunc graphCell
    (
        funcName=midradius,
        start=(0.1125 0  0.001),
        end=(0.1125 0 -0.899),
        fields=(T),
        axis=z
    )

    #includeFunc graphCell
    (
        funcName=subsurface,
        start=(0.223 0  0.001),
        end=(0.223 0 -0.899),
        fields=(T),
        axis=z
    )
}

surfaceFunctions
{
    #includeFunc cutPlaneSurface
    (
        funcName=yNormal,
        point=(1e3 0 0),
        normal=(0 1 0),
        fields=(U T melt1_alpha1 C.Cu grad(T))
    )
}

functions
{
    $numericalFunctions;
    $fieldsFunctions;
    $graphFunctions;
    $surfaceFunctions;
}

OptimisationSwitches
{
    fileHandler collated;
}

libs (
    "libmyFvModels.so"
    "libmyFvConstraints.so"
    "libmythermophysicalTransportModels.so"
);

// ************************************************************************* //
